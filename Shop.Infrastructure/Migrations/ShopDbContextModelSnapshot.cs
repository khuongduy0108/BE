// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.Infrastructure.Context;

#nullable disable

namespace Shop.Infrastructure.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Shop.Domain.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Shop.Domain.Entities.KhachHang", b =>
                {
                    b.Property<int>("MaKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhachHang"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HoTenDem")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaKhachHang");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("Shop.Domain.Entities.KhachSan", b =>
                {
                    b.Property<int>("MaKhachSan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhachSan"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HinhAnhKhachSan")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("HinhAnhPhong");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenKhachSan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKhachSan");

                    b.ToTable("KhachSan", (string)null);
                });

            modelBuilder.Entity("Shop.Domain.Entities.LoaiPhong", b =>
                {
                    b.Property<int>("MaLoaiPhong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiPhong"), 1L, 1);

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaLoaiPhong");

                    b.ToTable("LoaiPhong", (string)null);
                });

            modelBuilder.Entity("Shop.Domain.Entities.Phong", b =>
                {
                    b.Property<int>("MaPhong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhong"), 1L, 1);

                    b.Property<string>("HinhAnhPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("HinhAnhPhong");

                    b.Property<int>("MaKhachSan")
                        .HasColumnType("int");

                    b.Property<int>("MaLoaiPhong")
                        .HasColumnType("int");

                    b.Property<string>("SoPhong")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MaPhong");

                    b.HasIndex("MaKhachSan");

                    b.HasIndex("MaLoaiPhong");

                    b.ToTable("Phong", (string)null);
                });

            modelBuilder.Entity("Shop.Domain.Entities.Shop.Domain.Entities.DatPhong", b =>
                {
                    b.Property<int>("MaDatPhong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDatPhong"), 1L, 1);

                    b.Property<int>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<int>("MaPhong")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhanPhong")
                        .HasColumnType("date");

                    b.Property<DateTime>("NgayTraPhong")
                        .HasColumnType("date");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("MaDatPhong");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaPhong");

                    b.ToTable("DatPhong", (string)null);
                });

            modelBuilder.Entity("Shop.Domain.Entities.Phong", b =>
                {
                    b.HasOne("Shop.Domain.Entities.KhachSan", "KhachSan")
                        .WithMany("Phongs")
                        .HasForeignKey("MaKhachSan")
                        .IsRequired()
                        .HasConstraintName("FK_Phong_KhachSan");

                    b.HasOne("Shop.Domain.Entities.LoaiPhong", "LoaiPhong")
                        .WithMany("Phongs")
                        .HasForeignKey("MaLoaiPhong")
                        .IsRequired()
                        .HasConstraintName("FK_Phong_LoaiPhong");

                    b.Navigation("KhachSan");

                    b.Navigation("LoaiPhong");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Shop.Domain.Entities.DatPhong", b =>
                {
                    b.HasOne("Shop.Domain.Entities.KhachHang", "KhachHang")
                        .WithMany("DatPhongs")
                        .HasForeignKey("MaKhachHang")
                        .IsRequired()
                        .HasConstraintName("FK_DatPhong_KhachHang");

                    b.HasOne("Shop.Domain.Entities.Phong", "Phong")
                        .WithMany("DatPhongs")
                        .HasForeignKey("MaPhong")
                        .IsRequired()
                        .HasConstraintName("FK_DatPhong_Phong");

                    b.Navigation("KhachHang");

                    b.Navigation("Phong");
                });

            modelBuilder.Entity("Shop.Domain.Entities.KhachHang", b =>
                {
                    b.Navigation("DatPhongs");
                });

            modelBuilder.Entity("Shop.Domain.Entities.KhachSan", b =>
                {
                    b.Navigation("Phongs");
                });

            modelBuilder.Entity("Shop.Domain.Entities.LoaiPhong", b =>
                {
                    b.Navigation("Phongs");
                });

            modelBuilder.Entity("Shop.Domain.Entities.Phong", b =>
                {
                    b.Navigation("DatPhongs");
                });
#pragma warning restore 612, 618
        }
    }
}
